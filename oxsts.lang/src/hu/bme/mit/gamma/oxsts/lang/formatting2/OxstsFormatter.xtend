/*
 * generated by Xtext 2.31.0
 */
package hu.bme.mit.gamma.oxsts.lang.formatting2

import com.google.inject.Inject
import hu.bme.mit.gamma.oxsts.lang.services.OxstsGrammarAccess
import hu.bme.mit.gamma.oxsts.model.oxsts.Type
import org.eclipse.xtext.formatting2.AbstractFormatter2
import org.eclipse.xtext.formatting2.IFormattableDocument

class OxstsFormatter extends AbstractFormatter2 {
	
	@Inject extension OxstsGrammarAccess

	def dispatch void format(hu.bme.mit.gamma.oxsts.model.oxsts.Package _package, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (type : _package.types) {
			type.format
		}
	}

	def dispatch void format(Type type, extension IFormattableDocument document) {
		// TODO: format HiddenRegions around keywords, attributes, cross references, etc. 
		for (variable : type.variables) {
			variable.format
		}
		for (feature : type.features) {
			feature.format
		}
		for (transition : type.initTransition) {
			transition.format
		}
		for (transition : type.transitions) {
			transition.format
		}
		for (transition : type.mainTransition) {
			transition.format
		}
		for (transition : type.havocTransition) {
			transition.format
		}
		for (expression : type.invariant) {
			expression.format
		}
	}
	
	// TODO: implement for InstanceHolder, InstanceBinding, Transition, SequenceOperation, HavocOperation, ChoiceOperation, AssumptionOperation, IfOperation, InlineChoice, InlineSeq, InlineCall, InlineIfOperation, AssignmentOperation, Variable, Feature, OrOperator, AndOperator, PlusOperator, MinusOperator, EqualityOperator, InequalityOperator, NotOperator, ChainReferenceExpression
}
