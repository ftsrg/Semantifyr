/*
 * SPDX-FileCopyrightText: 2024 The Semantifyr Authors
 *
 * SPDX-License-Identifier: EPL-2.0
 */

package Test

type Container {
    var x : Integer
    var isZero : Boolean

    init {
        x := 2
    }

    tran { // main transition
        havoc (x)
        inline setIsZero()
    }

    tran setIsZero() {
        isZero := x == 0
    }
}

type Holder {
    feature containers : Container[0..*]

    init {
        inline seq containers -> init
    }

    tran {
        inline choice containers -> main
    }
}

target Mission {
    containment holder : Holder {
        containment c1 :> containers : Container
        containment c2 :> containers : Container
        containment c3 :> containers : Container
    }

    init {
        inline holder.init() // init transition reference
    }

    tran {
        inline holder.main() // main transition reference
    }

    prop {
        holder.c1.isZero == false && holder.c2.isZero == false && holder.c3.isZero == false
    }
}
