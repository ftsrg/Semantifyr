package Test

type Container {
    var x : Integer
    var isZero : Boolean

    init {
        x := 2
    }

    tran { // main transition
        havoc (x)
        inline setIsZero()
    }

    tran setIsZero() {
        isZero := x = 0
    }
}

type Holder {
    feature containers : Container[0..*]

    init {
        inline seq containers -> init
    }

    tran {
        inline choice containers -> main
    }
}

target Mission {
    instance holder : Holder {
        instance c1 :> containers : Container
        instance c2 :> containers : Container
        instance c3 :> containers : Container
    }

    init {
        inline holder.init() // init transition reference
    }

    tran {
        inline holder.main() // main transition reference
    }

    prop {
        holder.c1.isZero = false && holder.c2.isZero = false && holder.c3.isZero = false
    }
}
