/*
 * SPDX-FileCopyrightText: 2024 The Semantifyr Authors
 *
 * SPDX-License-Identifier: EPL-2.0
 */

package Test

type Region {
    // composition relation "States"
    feature states : State[0..*]
    // entryStates are also states
    feature entryState :> states : State[1..1]
    var activeState : states[0..1]
}
type State {
    // reference to parent region
    reference parentRegion : Region[1..1]
    // all states have "parentRegions"
    // but not all have "parentStates"
    reference parentState : State[0..1]
    // states may have a composite region
    feature region : Region[0..1]
}
target Mission {
    containment MainRegion : Region {
        // "AState" containment subsets "MainRegion.entryState"
        containment MainEntry :> entryState : State {
            // "MainEntry"'s "parentRegion" is "MainRegion"
            reference ::> parentRegion : Region = MainRegion
        }
        // "AState" containment subsets "MainRegion.states"
        containment AState :> states : State {
            reference ::> parentRegion : Region = MainRegion
        }
        containment BState :> states : State {
            // "BRegion" containment subsets "BState.region"
            containment BRegion :> region : Region {
                containment CState :> states : State {
                    reference ::> parentRegion : Region = BRegion
                    reference ::> parentState : State = BState
                }
            }
        }
    }

    init {
    }
    tran {
    }
    prop { true }
}
