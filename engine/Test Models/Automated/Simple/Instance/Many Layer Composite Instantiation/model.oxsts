package Test

type Composite {
    var x : Integer
    feature composites : Composite[0..*]

    tran {
        x := 0
        inline seq composites -> main
    }
}

target Mission {
    containment composite : Composite {
        containment a :> composites : Composite {
            containment a :> composites : Composite {
                containment a :> composites : Composite
                containment b :> composites : Composite
            }
            containment b :> composites : Composite {
                containment a :> composites : Composite
                containment b :> composites : Composite
            }
        }
        containment b :> composites : Composite {
            containment a :> composites : Composite {
                containment a :> composites : Composite
                containment b :> composites : Composite
            }
            containment b :> composites : Composite {
                containment a :> composites : Composite
                containment b :> composites : Composite
            }
        }
    }

    init {
        assume (false)
    }

    tran {
        inline composite.main()
    }

    prop {
        false
    }
}
