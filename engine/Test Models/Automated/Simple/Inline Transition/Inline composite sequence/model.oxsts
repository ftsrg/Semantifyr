package Test

type Simple {
    var x : Integer

    tran {
        x := x + 1
    }
}

type Composite {
    feature simples : Simple[0..*]

    tran {
        inline seq simples -> main
    }
}

target Mission {
    containment composite : Composite {
        containment a :> simples : Simple
        containment b :> simples : Simple
    }

    init {
        assume (false)
    }

    tran {
        inline composite.main()
    }

    prop {
        false
    }
}
