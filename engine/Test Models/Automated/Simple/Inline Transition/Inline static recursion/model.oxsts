/*
 * SPDX-FileCopyrightText: 2023-2024 The Semantifyr Authors
 *
 * SPDX-License-Identifier: EPL-2.0
 */

package Test

type Thing {
    var x : Integer

    feature innerThing : Thing[0..1]

    init {
        x := 0
    }

    tran recursion(thing: Thing) {
        inline if (innerThing != thing) {
            x := 1
            inline innerThing.recursion(thing)
        }
    }
}

target Mission {
    containment a : Thing {
        containment b :> innerThing : Thing {
            containment c :> innerThing : Thing {
                containment d :> innerThing : Thing {
                    containment e :> innerThing : Thing {
                        containment f :> innerThing : Thing
                    }
                }
            }
        }
    }

    init {
        inline a.init()
    }

    tran {
        inline a.recursion(a.b.c.d.e)
    }

    prop {
        false
    }
}

target GenericVerification {
    tran {

    }
}

target SpecificVerification : GenericVerification {
    override tran {

    }
}
