type CompositeStatechart : Statechart {
	ports += control : Controller // provides

	region := Main : Region {
		entryStates += Entry(Main) : EntryState

        states += A(Main) : State {
            region := ARegion : Region {
		        entryStates += AInitial(ARegion) : EntryState
		        states += Idle(ARegion) : State
            }
        }
        states += B(Main) : State {
            region := BRegion : Region {
                entryStates += BInitial(BRegion) : EntryState
                states += Operation(BRegion) : State
            }
        }
	}

	transitions += EntryTransition {
		from := Entry
		to := A
	}
	transitions += EntryTransition {
		from := AInitial
		to := Idle
	}
	transitions += EntryTransition {
		from := BInitial
		to := Operation
	}

	transitions += TriggeredTransition {
		from := Idle
		to := Operation
		trigger := EventTrigger(control.start)
	}
}
