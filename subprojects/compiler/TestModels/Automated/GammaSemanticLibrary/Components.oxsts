/*
 * SPDX-FileCopyrightText: 2023-2024 The Semantifyr Authors
 *
 * SPDX-License-Identifier: EPL-2.0
 */

package Components

import Events

type Component {
    feature events : Event[0..*]
    feature inputEvents :> events : Event[0..*]
    feature outputEvents :> events : Event[0..*]

    feature timeouts : Timeout[0..*]

    virtual init { }
    virtual tran { }

    tran resetInputEvents {
        inline seq inputEvents -> reset
    }

    tran resetOutputEvents {
        inline seq outputEvents -> reset
    }

    tran passTime {
        inline seq timeouts -> main
    }
}

type Channel {
    reference inputEvent : Event
    reference outputEvent : Event

    tran {
        if (inputEvent.isActive) {
            inline outputEvent.set()
        }
    }
}

type CompositeComponent : Component {
    feature components : Component
    feature channels : Channel

    tran passTime {
        inline seq timeouts -> main
        inline seq components -> passTime
    }
}

type SyncComponent : CompositeComponent {
    override init {
        inline seq components -> init
    }

    override tran {
        inline resetOutputEvents()
        inline seq components -> main
        inline seq channels -> main
        inline resetInputEvents()
    }
}
